C                           DISCLAIMER
C
C   This file was generated by TAMC version 5.3.2
C
C   THE AUTHOR DOES NOT MAKE  ANY WARRANTY, EXPRESS OR IMPLIED, OR ASSUMES
C   ANY LEGAL LIABILITY OR  RESPONSIBILITY FOR THE ACCURACY, COMPLETENESS,
C   OR USEFULNESS  OF ANY INFORMATION OR PROCESS  DISCLOSED, OR REPRESENTS
C   THAT ITS USE WOULD NOT INFRINGE PRIVATELY OWNED RIGHTS.
C
C   THIS CODE IS FOR NON-PROFIT-ORIENTED ACADEMIC RESEARCH AND EDUCATION
C   ONLY.  ANY COMMERCIAL OR OTHER PROFIT-ORIENTED USE OR  EVALUATION IS
C   STRICTLY  FORBIDDEN.  PASSING  THIS CODE  TO  ANY THIRD  PARTY IS  NOT
C   ALLOWED.
C
C   FOR COMMERCIAL OR  OTHER PROFIT-ORIENTED APPLICATIONS PLEASE CONTACT
C   info@FastOpt.com
C
      subroutine adyres( ires, rpar, ipar, senpar, adyu, adydelta )
C***************************************************************
C***************************************************************
C** This routine was generated by the                         **
C** Tangent linear and Adjoint Model Compiler,  TAMC 5.3.2    **
C***************************************************************
C***************************************************************
C==============================================
C all entries are defined explicitly
C==============================================
      implicit none

C==============================================
C define arguments
C==============================================
      double precision adydelta(*)
      double precision adyu(*)
      integer ipar(*)
      integer ires
      double precision rpar(*)
      double precision senpar(*)

C==============================================
C define local variables
C==============================================
      double precision adysum
      double precision adytemx
      double precision adytemy
      double precision coeff
      integer i
      integer ioff
      integer j
      integer k
      integer m
      integer m2
      integer neq

C----------------------------------------------
C RESET LOCAL ADJOINT VARIABLES
C----------------------------------------------
      adysum = 0.d0
      adytemx = 0.d0
      adytemy = 0.d0

C----------------------------------------------
C ROUTINE BODY
C----------------------------------------------
      neq = ipar(3)
      m = ipar(4)
      coeff = rpar(2)
      m2 = m+2
      if (ires .eq. 0) then
        do k = 1, m
          adytemx = 0.d0
          adytemy = 0.d0
          ioff = m2*k
          do j = 1, m
            adytemx = 0.d0
            adytemy = 0.d0
            i = ioff+j+1
            adytemx = adytemx-adydelta(i)*coeff
            adytemy = adytemy-adydelta(i)*coeff
            adydelta(i) = 0.d0
            adytemy = adytemy*senpar(2)
            adyu(i-m2) = adyu(i-m2)+adytemy
            adyu(i+m2) = adyu(i+m2)+adytemy
            adyu(i) = adyu(i)-2*adytemy
            adytemy = 0.d0
            adytemx = adytemx*senpar(1)
            adyu(i-1) = adyu(i-1)+adytemx
            adyu(i+1) = adyu(i+1)+adytemx
            adyu(i) = adyu(i)-2*adytemx
            adytemx = 0.d0
          end do
        end do
      else if (ires .eq. 3) then
        adysum = adysum-adydelta(neq+1)
        adydelta(neq+1) = 0.d0
        do i = 1, neq
          adyu(i) = adyu(i)+adysum
        end do
      endif

      end


